import { useState, useEffect } from 'react';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import { Badge } from '@/components/ui/badge';
import Icon from '@/components/ui/icon';

const Index = () => {
  const [activeSection, setActiveSection] = useState('home');

  useEffect(() => {
    const handleScroll = () => {
      const sections = ['home', 'news', 'team', 'rules', 'wiki'];
      const scrollPosition = window.scrollY + 100;

      for (const section of sections) {
        const element = document.getElementById(section);
        if (element) {
          const { offsetTop, offsetHeight } = element;
          if (scrollPosition >= offsetTop && scrollPosition < offsetTop + offsetHeight) {
            setActiveSection(section);
            break;
          }
        }
      }
    };

    window.addEventListener('scroll', handleScroll);
    return () => window.removeEventListener('scroll', handleScroll);
  }, []);

  const scrollToSection = (id: string) => {
    const element = document.getElementById(id);
    if (element) {
      element.scrollIntoView({ behavior: 'smooth' });
    }
  };

  const news = [
    {
      id: 1,
      title: '–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ 2.0 —É–∂–µ –∑–¥–µ—Å—å!',
      date: '25 –æ–∫—Ç—è–±—Ä—è 2024',
      description: '–î–æ–±–∞–≤–ª–µ–Ω—ã –Ω–æ–≤—ã–µ –±–∏–æ–º—ã, –º–æ–±—ã –∏ —Å–∏—Å—Ç–µ–º–∞ –∫–ª–∞–Ω–æ–≤. –ò—Å—Å–ª–µ–¥—É–π—Ç–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –º–∏—Ä!',
      badge: '–í–∞–∂–Ω–æ–µ'
    },
    {
      id: 2,
      title: '–•—ç–ª–ª–æ—É–∏–Ω –∏–≤–µ–Ω—Ç —Å—Ç–∞—Ä—Ç–æ–≤–∞–ª',
      date: '20 –æ–∫—Ç—è–±—Ä—è 2024',
      description: '–£—á–∞—Å—Ç–≤—É–π—Ç–µ –≤ –∂—É—Ç–∫–æ–º –∏–≤–µ–Ω—Ç–µ –∏ –ø–æ–ª—É—á–∞–π—Ç–µ —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ –Ω–∞–≥—Ä–∞–¥—ã –¥–æ 1 –Ω–æ—è–±—Ä—è.',
      badge: '–ò–≤–µ–Ω—Ç'
    },
    {
      id: 3,
      title: '–ù–æ–≤–∞—è —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∞—è —Å–∏—Å—Ç–µ–º–∞',
      date: '15 –æ–∫—Ç—è–±—Ä—è 2024',
      description: '–ü–æ—è–≤–∏–ª–∏—Å—å –Ω–æ–≤—ã–µ —Å–ø–æ—Å–æ–±—ã –∑–∞—Ä–∞–±–æ—Ç–∫–∞ –∏ –º–∞–≥–∞–∑–∏–Ω –∏–≥—Ä–æ–∫–æ–≤ –¥–ª—è —Ç–æ—Ä–≥–æ–≤–ª–∏.',
      badge: '–ù–æ–≤–æ–µ'
    }
  ];

  const team = [
    { name: 'ChadAdmin', role: '–í–ª–∞–¥–µ–ª–µ—Ü', icon: 'üëë' },
    { name: 'MegaModer', role: '–ì–ª–∞–≤–Ω—ã–π –º–æ–¥–µ—Ä–∞—Ç–æ—Ä', icon: '‚öîÔ∏è' },
    { name: 'BuilderPro', role: '–°—Ç—Ä–æ–∏—Ç–µ–ª—å', icon: 'üèóÔ∏è' },
    { name: 'EventMaster', role: '–ò–≤–µ–Ω—Ç-–º–µ–Ω–µ–¥–∂–µ—Ä', icon: 'üé™' }
  ];

  const rules = [
    { title: '–£–≤–∞–∂–µ–Ω–∏–µ –∫ –∏–≥—Ä–æ–∫–∞–º', description: '–ó–∞–ø—Ä–µ—â–µ–Ω—ã –æ—Å–∫–æ—Ä–±–ª–µ–Ω–∏—è, —Ç—Ä–∞–≤–ª—è –∏ –Ω–µ—É–≤–∞–∂–∏—Ç–µ–ª—å–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ' },
    { title: '–ß–µ—Å—Ç–Ω–∞—è –∏–≥—Ä–∞', description: '–ß–∏—Ç—ã, –±–∞–≥–∏ –∏ —ç–∫—Å–ø–ª–æ–∏—Ç—ã —Å—Ç—Ä–æ–≥–æ –∑–∞–ø—Ä–µ—â–µ–Ω—ã' },
    { title: '–ë–µ–∑ –≥—Ä–∏—Ñ–µ—Ä—Å—Ç–≤–∞', description: '–õ–æ–º–∞—Ç—å —á—É–∂–∏–µ –ø–æ—Å—Ç—Ä–æ–π–∫–∏ –∏ –∫—Ä–∞—Å—Ç—å –ø—Ä–µ–¥–º–µ—Ç—ã –Ω–µ–ª—å–∑—è' },
    { title: '–ê–¥–µ–∫–≤–∞—Ç–Ω—ã–π —á–∞—Ç', description: '–°–ø–∞–º, —Ä–µ–∫–ª–∞–º–∞ –∏ –º–∞—Ç –≤ —á–∞—Ç–µ –∑–∞–ø—Ä–µ—â–µ–Ω—ã' },
    { title: '–û–¥–∏–Ω –∞–∫–∫–∞—É–Ω—Ç', description: '–ú—É–ª—å—Ç–∏–∞–∫–∫–∞—É–Ω—Ç—ã –∏ –æ–±—Ö–æ–¥ –±–∞–Ω–æ–≤ –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã' }
  ];

  const wikiSections = [
    {
      title: '–ù–∞—á–∞–ª–æ –∏–≥—Ä—ã',
      content: '–ó–∞–π–¥—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä, –≤—ã –ø–æ—è–≤–∏—Ç–µ—Å—å –≤ —Å–ø–∞–≤–Ω–µ. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /spawn –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞. –ü–æ–ª—É—á–∏—Ç–µ —Å—Ç–∞—Ä—Ç–æ–≤—ã–π –Ω–∞–±–æ—Ä –∫–æ–º–∞–Ω–¥–æ–π /kit starter.'
    },
    {
      title: '–≠–∫–æ–Ω–æ–º–∏–∫–∞',
      content: '–ó–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π—Ç–µ –º–æ–Ω–µ—Ç—ã –∑–∞ –¥–æ–±—ã—á—É —Ä–µ—Å—É—Ä—Å–æ–≤, –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–≤–µ—Å—Ç–æ–≤ –∏ –ø—Ä–æ–¥–∞–∂—É –ø—Ä–µ–¥–º–µ—Ç–æ–≤. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /balance –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–∞–ª–∞–Ω—Å–∞.'
    },
    {
      title: '–ö–ª–∞–Ω—ã',
      content: '–°–æ–∑–¥–∞–≤–∞–π—Ç–µ –∫–ª–∞–Ω—ã —Å –¥—Ä—É–∑—å—è–º–∏ –∫–æ–º–∞–Ω–¥–æ–π /clan create. –ó–∞—â–∏—â–∞–π—Ç–µ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏—é –∏ —É—á–∞—Å—Ç–≤—É–π—Ç–µ –≤ –∫–ª–∞–Ω–æ–≤—ã—Ö –≤–æ–π–Ω–∞—Ö –∑–∞ –ø—Ä–∏–∑—ã.'
    },
    {
      title: '–ü—Ä–∏–≤–∞—Ç–Ω–∞—è —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏—è',
      content: '–ó–∞—â–∏—Ç–∏—Ç–µ —Å–≤–æ–π –¥–æ–º –∫–æ–º–∞–Ω–¥–æ–π /region claim. –î–æ–±–∞–≤–ª—è–π—Ç–µ –¥—Ä—É–∑–µ–π —á–µ—Ä–µ–∑ /region add <–Ω–∏–∫> –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–Ω–æ–π –∏–≥—Ä—ã.'
    }
  ];

  return (
    <div className="min-h-screen bg-gradient-to-b from-black via-zinc-900 to-black text-white">
      <nav className="fixed top-0 left-0 right-0 z-50 bg-black/80 backdrop-blur-md border-b border-zinc-800">
        <div className="container mx-auto px-4 py-4 flex justify-between items-center">
          <div className="flex items-center gap-2">
            <div className="w-10 h-10 bg-primary rounded-lg flex items-center justify-center text-2xl">
              ‚õèÔ∏è
            </div>
            <span className="text-2xl font-bold">ChadWorld</span>
          </div>
          
          <div className="hidden md:flex gap-6">
            {['–ì–ª–∞–≤–Ω–∞—è', '–ù–æ–≤–æ—Å—Ç–∏', '–ö–æ–º–∞–Ω–¥–∞', '–ü—Ä–∞–≤–∏–ª–∞', '–í–∏–∫–∏'].map((item, index) => (
              <button
                key={item}
                onClick={() => scrollToSection(['home', 'news', 'team', 'rules', 'wiki'][index])}
                className={`text-sm font-medium transition-colors hover:text-primary ${
                  activeSection === ['home', 'news', 'team', 'rules', 'wiki'][index] ? 'text-primary' : 'text-zinc-400'
                }`}
              >
                {item}
              </button>
            ))}
          </div>

          <Button className="bg-primary hover:bg-primary/90 text-black font-semibold">
            –ö—É–ø–∏—Ç—å –ø—Ä–æ—Ö–æ–¥–∫—É
          </Button>
        </div>
      </nav>

      <section id="home" className="pt-32 pb-20 px-4">
        <div className="container mx-auto text-center">
          <div className="animate-fade-in">
            <Badge className="mb-6 bg-primary/20 text-primary border-primary/30 text-sm px-4 py-1">
              üéÆ –û–Ω–ª–∞–π–Ω: 247 –∏–≥—Ä–æ–∫–æ–≤
            </Badge>
            <h1 className="text-5xl md:text-7xl font-bold mb-6 bg-gradient-to-r from-white via-zinc-300 to-zinc-500 bg-clip-text text-transparent">
              ChadWorld
            </h1>
            <p className="text-xl md:text-2xl text-zinc-400 mb-8 max-w-2xl mx-auto">
              –õ—É—á—à–∏–π Minecraft —Å–µ—Ä–≤–µ—Ä —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º–∏ –º–µ—Ö–∞–Ω–∏–∫–∞–º–∏, –¥—Ä—É–∂–Ω—ã–º –∫–æ–º—å—é–Ω–∏—Ç–∏ –∏ —ç–ø–∏—á–Ω—ã–º–∏ –∏–≤–µ–Ω—Ç–∞–º–∏
            </p>
            <div className="flex flex-col sm:flex-row gap-4 justify-center">
              <Button size="lg" className="bg-primary hover:bg-primary/90 text-black font-semibold text-lg px-8 hover-scale">
                <Icon name="Gamepad2" className="mr-2" size={20} />
                –ù–∞—á–∞—Ç—å –∏–≥—Ä–∞—Ç—å
              </Button>
              <Button size="lg" variant="outline" className="border-zinc-700 hover:bg-zinc-800 text-lg px-8 hover-scale">
                <Icon name="Users" className="mr-2" size={20} />
                Discord —Å–æ–æ–±—â–µ—Å—Ç–≤–æ
              </Button>
            </div>
          </div>

          <div className="grid grid-cols-1 md:grid-cols-3 gap-6 mt-16 max-w-4xl mx-auto">
            {[
              { icon: 'Zap', title: '–ë–µ–∑ –ª–∞–≥–æ–≤', desc: '–ú–æ—â–Ω—ã–µ —Å–µ—Ä–≤–µ—Ä–∞' },
              { icon: 'Shield', title: '–ó–∞—â–∏—Ç–∞', desc: '–ê–Ω—Ç–∏—á–∏—Ç –∏ –º–æ–¥–µ—Ä–∞—Ü–∏—è' },
              { icon: 'Trophy', title: '–ò–≤–µ–Ω—Ç—ã', desc: '–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–µ —Ç—É—Ä–Ω–∏—Ä—ã' }
            ].map((feature, i) => (
              <Card key={i} className="bg-zinc-900/50 border-zinc-800 hover:border-primary/50 transition-all hover-scale">
                <CardHeader>
                  <div className="w-12 h-12 rounded-lg bg-primary/20 flex items-center justify-center mb-4 mx-auto">
                    <Icon name={feature.icon as any} className="text-primary" size={24} />
                  </div>
                  <CardTitle className="text-center">{feature.title}</CardTitle>
                  <CardDescription className="text-center">{feature.desc}</CardDescription>
                </CardHeader>
              </Card>
            ))}
          </div>
        </div>
      </section>

      <section id="news" className="py-20 px-4 bg-zinc-950/50">
        <div className="container mx-auto">
          <h2 className="text-4xl font-bold mb-12 text-center">
            <Icon name="Newspaper" className="inline mr-3 text-primary" size={36} />
            –ü–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏
          </h2>
          <div className="grid grid-cols-1 md:grid-cols-3 gap-6 max-w-6xl mx-auto">
            {news.map((item) => (
              <Card key={item.id} className="bg-zinc-900/70 border-zinc-800 hover:border-primary/50 transition-all hover-scale">
                <CardHeader>
                  <div className="flex justify-between items-start mb-2">
                    <Badge className="bg-primary/20 text-primary border-primary/30">{item.badge}</Badge>
                    <span className="text-xs text-zinc-500">{item.date}</span>
                  </div>
                  <CardTitle className="text-xl">{item.title}</CardTitle>
                </CardHeader>
                <CardContent>
                  <p className="text-zinc-400">{item.description}</p>
                </CardContent>
              </Card>
            ))}
          </div>
        </div>
      </section>

      <section id="team" className="py-20 px-4">
        <div className="container mx-auto">
          <h2 className="text-4xl font-bold mb-12 text-center">
            <Icon name="Crown" className="inline mr-3 text-primary" size={36} />
            –ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞
          </h2>
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 max-w-5xl mx-auto">
            {team.map((member, i) => (
              <Card key={i} className="bg-zinc-900/70 border-zinc-800 hover:border-primary/50 transition-all hover-scale text-center">
                <CardHeader>
                  <div className="text-6xl mb-4">{member.icon}</div>
                  <CardTitle>{member.name}</CardTitle>
                  <CardDescription className="text-primary">{member.role}</CardDescription>
                </CardHeader>
              </Card>
            ))}
          </div>
        </div>
      </section>

      <section id="rules" className="py-20 px-4 bg-zinc-950/50">
        <div className="container mx-auto max-w-4xl">
          <h2 className="text-4xl font-bold mb-12 text-center">
            <Icon name="ScrollText" className="inline mr-3 text-primary" size={36} />
            –ü—Ä–∞–≤–∏–ª–∞ —Å–µ—Ä–≤–µ—Ä–∞
          </h2>
          <div className="space-y-4">
            {rules.map((rule, i) => (
              <Card key={i} className="bg-zinc-900/70 border-zinc-800 hover:border-primary/30 transition-all">
                <CardHeader>
                  <CardTitle className="text-lg flex items-center gap-3">
                    <span className="flex items-center justify-center w-8 h-8 rounded-full bg-primary/20 text-primary text-sm font-bold">
                      {i + 1}
                    </span>
                    {rule.title}
                  </CardTitle>
                  <CardDescription className="ml-11">{rule.description}</CardDescription>
                </CardHeader>
              </Card>
            ))}
          </div>
        </div>
      </section>

      <section id="wiki" className="py-20 px-4">
        <div className="container mx-auto max-w-4xl">
          <h2 className="text-4xl font-bold mb-12 text-center">
            <Icon name="Book" className="inline mr-3 text-primary" size={36} />
            –ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π
          </h2>
          <Tabs defaultValue="0" className="w-full">
            <TabsList className="grid w-full grid-cols-2 md:grid-cols-4 bg-zinc-900/70 mb-8">
              {wikiSections.map((section, i) => (
                <TabsTrigger key={i} value={String(i)} className="data-[state=active]:bg-primary data-[state=active]:text-black">
                  {section.title}
                </TabsTrigger>
              ))}
            </TabsList>
            {wikiSections.map((section, i) => (
              <TabsContent key={i} value={String(i)}>
                <Card className="bg-zinc-900/70 border-zinc-800">
                  <CardHeader>
                    <CardTitle>{section.title}</CardTitle>
                  </CardHeader>
                  <CardContent>
                    <p className="text-zinc-400 leading-relaxed">{section.content}</p>
                  </CardContent>
                </Card>
              </TabsContent>
            ))}
          </Tabs>
        </div>
      </section>

      <section className="py-20 px-4 bg-gradient-to-t from-black to-zinc-950">
        <div className="container mx-auto text-center max-w-3xl">
          <h2 className="text-4xl font-bold mb-6">–ì–æ—Ç–æ–≤ –Ω–∞—á–∞—Ç—å –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–µ?</h2>
          <p className="text-xl text-zinc-400 mb-8">
            –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –∫ ChadWorld –∏ —Å—Ç–∞–Ω—å —á–∞—Å—Ç—å—é –ª—É—á—à–µ–≥–æ –∏–≥—Ä–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞
          </p>
          <Button size="lg" className="bg-primary hover:bg-primary/90 text-black font-semibold text-lg px-12 hover-scale">
            <Icon name="ShoppingCart" className="mr-2" size={20} />
            –ö—É–ø–∏—Ç—å –ø—Ä–æ—Ö–æ–¥–∫—É —Å–µ–π—á–∞—Å
          </Button>
        </div>
      </section>

      <footer className="py-8 px-4 border-t border-zinc-800">
        <div className="container mx-auto text-center text-zinc-500">
          <p>¬© 2024 ChadWorld. –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã.</p>
          <div className="flex justify-center gap-6 mt-4">
            <a href="#" className="hover:text-primary transition-colors">Discord</a>
            <a href="#" className="hover:text-primary transition-colors">VK</a>
            <a href="#" className="hover:text-primary transition-colors">Telegram</a>
          </div>
        </div>
      </footer>
    </div>
  );
};

export default Index;
